{"ast":null,"code":"var _jsxFileName = \"/home/evgeniy/webProgramming/untitled/hackathonVTB/frontend/src/components/Charts/ChartConfig/index.js\";\nimport React from 'react';\nimport { FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartConfig = ({\n  data,\n  setChartConfig,\n  chartConfig\n}) => {\n  const chartTypes = ['pie', 'bar'];\n\n  const setChartArgument = argument => {\n    setChartConfig({ ...chartConfig,\n      argument\n    });\n  };\n\n  const setChartValue = value => {\n    setChartConfig({ ...chartConfig,\n      value\n    });\n  };\n\n  const setChartType = chart => {\n    setChartConfig({ ...chartConfig,\n      chart\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Argument\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      children: Object.keys(data[0]).map(itemName => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: itemName,\n        control: /*#__PURE__*/_jsxDEV(Radio, {\n          onChange: event => setChartArgument(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 65\n        }, this),\n        label: itemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      children: Object.keys(data[0]).map(itemName => {\n        if (typeof data[0][itemName] === 'number') return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: itemName,\n          control: /*#__PURE__*/_jsxDEV(Radio, {\n            onChange: event => setChartValue(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 112\n          }, this),\n          label: itemName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 68\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      children: chartTypes.map(chartType => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: chartType,\n        control: /*#__PURE__*/_jsxDEV(Radio, {\n          onChange: event => setChartType(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 66\n        }, this),\n        label: chartType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChartConfig;\nexport default ChartConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartConfig\");","map":{"version":3,"sources":["/home/evgeniy/webProgramming/untitled/hackathonVTB/frontend/src/components/Charts/ChartConfig/index.js"],"names":["React","FormControlLabel","Radio","RadioGroup","ChartConfig","data","setChartConfig","chartConfig","chartTypes","setChartArgument","argument","setChartValue","value","setChartType","chart","Object","keys","map","itemName","event","target","chartType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,KAA1B,EAAiCC,UAAjC,QAAkD,eAAlD;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,cAAP;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AAEzD,QAAMC,UAAU,GAAG,CAAC,KAAD,EAAO,KAAP,CAAnB;;AAEA,QAAMC,gBAAgB,GAAIC,QAAD,IAAc;AACnCJ,IAAAA,cAAc,CAAC,EAAC,GAAGC,WAAJ;AAAiBG,MAAAA;AAAjB,KAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,cAAc,CAAC,EAAC,GAAGC,WAAJ;AAAiBK,MAAAA;AAAjB,KAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BR,IAAAA,cAAc,CAAC,EAAC,GAAGC,WAAJ;AAAiBO,MAAAA;AAAjB,KAAD,CAAd;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYX,IAAI,CAAC,CAAD,CAAhB,EAAqBY,GAArB,CAAyBC,QAAQ,iBAC9B,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEA,QAAzB;AAAmC,QAAA,OAAO,eAAE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAGC,KAAD,IAASV,gBAAgB,CAACU,KAAK,CAACC,MAAN,CAAaR,KAAd;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAA5C;AAA+G,QAAA,KAAK,EAAEM;AAAtH;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,UAAD;AAAA,gBACKH,MAAM,CAACC,IAAP,CAAYX,IAAI,CAAC,CAAD,CAAhB,EAAqBY,GAArB,CAAyBC,QAAQ,IAAI;AAClC,YAAG,OAAOb,IAAI,CAAC,CAAD,CAAJ,CAAQa,QAAR,CAAP,KAA2B,QAA9B,EAAwC,oBAAO,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEA,QAAzB;AAAmC,UAAA,OAAO,eAAE,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAGC,KAAD,IAASR,aAAa,CAACQ,KAAK,CAACC,MAAN,CAAaR,KAAd;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAA5C;AAA4G,UAAA,KAAK,EAAEM;AAAnH;AAAA;AAAA;AAAA;AAAA,gBAAP;AACvC,OAFJ;AADL;AAAA;AAAA;AAAA;AAAA,YARJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,eAeI,QAAC,UAAD;AAAA,gBACKV,UAAU,CAACS,GAAX,CAAeI,SAAS,iBACrB,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEA,SAAzB;AAAoC,QAAA,OAAO,eAAE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAGF,KAAD,IAASN,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaR,KAAd;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAA7C;AAA4G,QAAA,KAAK,EAAES;AAAnH;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvCD;;KAAMjB,W;AAyCN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport {FormControlLabel, Radio, RadioGroup} from \"@mui/material\";\n\nconst ChartConfig = ({data, setChartConfig, chartConfig}) => {\n\n    const chartTypes = ['pie','bar']\n\n    const setChartArgument = (argument) => {\n        setChartConfig({...chartConfig, argument})\n    }\n\n    const setChartValue = (value) => {\n        setChartConfig({...chartConfig, value})\n    }\n\n    const setChartType = (chart) => {\n        setChartConfig({...chartConfig, chart})\n    }\n\n    return (\n        <div>\n            <p>Argument</p>\n            <RadioGroup>\n                {Object.keys(data[0]).map(itemName => (\n                    <FormControlLabel value={itemName} control={<Radio onChange={(event)=>setChartArgument(event.target.value)}/>} label={itemName}/>\n                ))}\n            </RadioGroup>\n            <p>Value</p>\n            <RadioGroup>\n                {Object.keys(data[0]).map(itemName => {\n                    if(typeof data[0][itemName]==='number') return <FormControlLabel value={itemName} control={<Radio onChange={(event)=>setChartValue(event.target.value)}/>} label={itemName}/>\n                    }\n                )}\n            </RadioGroup>\n            <p>Chart</p>\n            <RadioGroup>\n                {chartTypes.map(chartType => (\n                    <FormControlLabel value={chartType} control={<Radio onChange={(event)=>setChartType(event.target.value)}/>} label={chartType}/>\n                ))}\n            </RadioGroup>\n        </div>\n    )\n}\n\nexport default ChartConfig"]},"metadata":{},"sourceType":"module"}